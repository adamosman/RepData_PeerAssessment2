url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
head(dtGDP)
dtGDP <- dtGDP[X != ""]
head(dtGDP)
str(dtGDP)
dtGDP <- dtGDP[, list(X, X.1, X.2, X.3, X.4)]
head(dtGDP)
setnames(dtGDP, c("X", "X.1", "X.2", "X.3", "X.4"), c("Country Code", "rankingGDP", "Long.Name", "gdp"))
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("Country Code", "rankingGDP", "Long.Name", "gdp"))
head(dtGDP)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
names(dtEd)
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setnames(dtGD,  c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
names(dtGDP)
setnames(dtGDP, "Country Code", "CountryCode")
names(dtGDP)
dt <- merge(dtGDP, dtEd, all = TRUE, by = "CountryCode")
head(dt)
str(dtE)
str(dt)
sum(!is.na(unique(dt$rankingGDP)))
unique(dt$rankingGDP)
!is.na(unique(dt$rankingGDP))
names(dt)
order(rankingGDP, decreasing = TRUE)
order(dt, rankingGDP, decreasing = TRUE)
?order
order(dt$rankingGDP)
order(dt$rankingGDP, decreasing = TRUE)
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y,
rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[, list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, gdp)][13]
dt[order(rankingGDP, decreasing = TRUE),][13]
order(rankingGDP, decreasing = TRUE)
dt[order(rankingGDP, decreasing = TRUE),]
str(dt)
dt[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile()
breaks <- quantile(dt$rankingGDP, probs = seq(0,1,0.2), na.rm = TRUE)
breaks
seq(0,1,0.2)
dt$rankingGDP <- cut(dt$rankingGDP, breaks = breaks)
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
dt$quantileGDP <- cut(dt$rankingGDP, breaks = breaks)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
names(dt)
dt$quantileGDP
library(datasets)
data(cars)
with(cars,plot(speed, dist))
library(lattice)
state <- data.frame(state.x77,region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
data(mpg)
qplot(displ,hwy, data = mpg)
colors()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v=12, lwd = 2)
abline(v = median(ppm), col = 'magenta')
abline(v = median(ppm), col = 'magenta', lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Regin")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ regin, data = pollution, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "weset")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
swirl()
library(swril)
library(swirl)
swirl(())
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table
table(f)
xyplot(y~x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local = environment)
pathtofile("plot1.R", local = environment())
View(pathtofile)
View(pathtofile)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamnonds)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len = 6))
p1 <- colorRampPalette(c("red", "blue")
)
p1
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
pi(6)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = 0.5)
p3(5)
plot(x, y, pch = 19, col = rgb(0,0.5,0.5))
plot(x, y, pch = 19, col = rgb(0,0.5,0.5, alpha = 0.3))
cols <- brewer.pal(3,"BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
bye()
library(swirl)
swirl()
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg, color = drv)
qplot(displ,hwy,data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color, drv)
qplot(y = hwy, data = mpg, color=drv)
myhigh
qplot(color = drv, y = hwy, data = mpg, geom = "boxplot")
qplot(hwy, color = drv data = mpg, geom = "boxplot")
qplot(hwy, color = drv, data = mpg, geom = "boxplot")
qplot(x = hwy, color = drv, data = mpg, geom = "boxplot")
qplot(y = hwy, color = drv, data = mpg, geom = "boxplot")
qplot(y = hwy, x = drv, data = mpg, geom = "boxplot")
qplot(y = hwy, x = drv, data = mpg, geom = "boxplot", color = manufacturer)
qplot(y = hwy, data = mpg, fill = drv)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv,)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, goem = c("point","smooth"), facets = .~drv)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ,hwy))
summary(g)
g+geom_p
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv), labs(title = "Swirl Rules!"), labs(x = "Displacement", y = "Hwy Mileage"))
g + geom_point(aes(color = drv)+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage"))
g + geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage"))
g + geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color=drv))+theme_bw(base_family = "Time")
g + geom_point(color=drv)+theme_bw(base_family = "Time")
g + geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdata, aes(x = myx, y = myy))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point()+facet_grid(drv~cyl, margins = TRUE)
g + geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method="lm", se = FALSE, size = 2, color = "black")
g + geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method="lm", se = FALSE, size = 2, color = "black")+labs(x= "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds, shape = cut)
qplot(carat,price,data = diamonds, color = cut)
qplot(carat,price,data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat,price,data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4),na.rm = TRUE )
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat,price)) + geom_boxplot() + facet_grid(.~cut)
0
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
c <- xyplot(weight ~ Time | Diet, BodyWeight)
class(c)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
library(movies)
library(ggplot2)
data(movies)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
class(storm.raw)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
View(storm.fatality)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
str(storm.raw)
storm.property <- cbind(storm.raw$PROPDMG,storm.raw$PROPDMGEXP)
head(storm.property)
View(storm.raw)
View(storm.raw)
head(storm.raw$PROPDMGEXP)
storm.raw["PROPDMG":"PROPDMGEXP"]
storm.raw[,"PROPDMG":"PROPDMGEXP"]
storm.raw[,"PROPDMG"]
storm.raw[,c("PROPDMG", "PROPDMGEXP"]
storm.raw[,c("PROPDMG", "PROPDMGEXP")]
storm.property <- storm.raw[,c("PROPDMG", "PROPDMGEXP")]
str(storm.property)
head(storm.property)
table(storm.property$PROPDMGEXP)
table(storm.property$PROPDMGEXP)
table(storm.property$PROPDMGEXP)
levels(storm.property$PROPDMGEXP)
storm.property$PROPDMGEXP
storm.property$PROPDMGEXP[1]
class(storm.property$PROPDMGEXP[1])
as.character(storm.property$PROPDMGEXP[1])
as.character(storm.property$PROPDMGEXP)
k<-as.character(storm.property$PROPDMGEXP)
table(k)
rm(k)
head(storm.property)
class
class(storm.property$PROPDMG)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
warnings()
head(storm.property)
storm.property
class(storm.property$PROPDMGEXP)
i
nrow(storm.property)
rm("storm.fatality", "storm.injury", "storm.property")
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.property
View(storm.raw)
View(storm.raw)
rm("storm.fatality", "storm.injury", "storm.property")
rm("i")
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
rm("i")
rm("storm.fatality", "storm.injury", "storm.property")
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
table(storm.property)
table(storm.property)
head(storm.property)
storm.property
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.property.sum)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.property.sum)
pie(head(storm.property.sum$PROPDMG),labels = head(storm.property.sum$EVTYPE))
head(storm.property.sum)
pie(head(storm.property.sum$PROPDMG),labels = head(storm.property.sum$EVTYPE))
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.health.total)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.health.total)
head(storm.fatality)
head(storm.injury)
head(storm.health.total)
head(storm.health.total, n=10)
head(storm.health.total, n=15)
storm.health["EXCESSIVE HEAT"]
storm.health.total["EXCESSIVE HEAT"]
storm.health.total["EXCESSIVE HEAT",]
storm.health.total["EXCESSIVE HEAT"]
storm.health.total["EXCESSIVE HEAT"] <- 0
head(storm.health.total, n=15)
storm.health.total["EXCESSIVE HEAT"] <- NA
head(storm.health.total, n=15)
storm.health.total[,-"EXCESSIVE HEAT"]
storm.health.total["EXCESSIVE HEAT"] <- NULL
head(storm.health.total, n=15)
storm.health.total["EXCESSIVE HEAT",] <- NULL
storm.health.total["EXCESSIVE HEAT",] <- 0
storm.health.total["EXCESSIVE HEAT",] <- NA
head(storm.health.total, n=15)
storm.health.total[2,] <- NA
head(storm.health.total, n=15)
storm.health.total$EVTYPE["TSTM WIND"] <- NULL
storm.health.total$EVTYPE["TSTM WIND"] <- 0
storm.health.total$EVTYPE["TSTM WIND"] <- NA
storm.health.total$EVTYPE["TSTM WIND",] <- NA
storm.health.total$EVTYPE[["TSTM WIND"]] <- NA
storm.health.total$EVTYPE[["TSTM WIND"]]
storm.health.total$EVTYPE["TSTM WIND"]
head(storm.health.total, n=15)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health[storm.health$PUBLIC.HEALTH != 0, ]
storm.health.total
head(storm.health.total)
head(storm.health.total, n=15)
storm.health.total["HEAT",2]
storm.health.total$EVTYPE <- as.character(storm.health.total$EVTYPE)
storm.health.total["HEAT",2]
head(storm.health.total, n=15)
storm.health.total$EVTYPE[1]
storm.health.total[EVTYPE == "HEAT",2]
storm.health.total[:EVTYPE"" == "HEAT",2]
storm.health.total["EVTYPE"" == "HEAT",2]
storm.health.total["EVTYPE" == "HEAT",2]
storm.health.total[1,2]
storm.health.total[4,2]
which(storm.health.total$EVTYPE=="HEAT")
which(storm.health.total$EVTYPE=="HEAT", storm.health.total$PUBLIC.HEALTH)
storm.health.total$EVTYPE=="HEAT"
storm.health.total[storm.health.total$EVTYPE=="HEAT",]
storm.health.total[storm.health.total$EVTYPE=="HEAT",2]
rowSums(storm.health.total)
rowSums(storm.health.total$PUBLIC.HEALTH)
rowsum(storm.health.total)
rowsum(storm.health.total$PUBLIC.HEALTH,c("HEAT"))
rowsum(storm.health.total$PUBLIC.HEALTH,c("HEAT","FLOOD"))
row(storm.health.total)
head(storm.health.total, n=15)
storm.health.total[storm.health.total$EVTYPE=="HEAT",2]
damage.by.event <- tapply(storm.health.total$PUBLIC.HEALTH, as.character(storm.health.total$EVTYPE), sum)
damage.by.event
damage.by.event
rm(damage.by.event)
head(storm.health.total, n=15)
storm.health.total["EVTYPE"]
storm.health.total["EVTYPE"=="HEAT"]
storm.health.total["EVTYPE"=="HEAT",2]
storm.health.total["EVTYPE"=="HEAT",]
storm.health.total["EVTYPE"=="HEAT",3]
storm.health.total["EVTYPE"=="HEAT",2]
head(storm.health.total)
head(storm.health.total, n=15)
n <- storm.health.total[storm.health.total$PUBLIC.HEALTH>1000]
n <- storm.health.total[storm.health.total$PUBLIC.HEALTH>1000,]
n
storm.health.total[2,1]
storm.health.total[2,2]
storm.health.total[2,2] + storm.health.total[6,2]
storm.health.total[2,2] <- storm.health.total[2,2] + storm.health.total[6,2]
head(storm.health.total)
storm.health.total[-6,]
storm.health.total <- storm.health.total[-6,]
head(storm.health.total)
head(storm.health.total,n=15)
rm("storm.health", "storm.health.total","n")
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
storm.health.total <- arrange(storm.health.total,desc(PUBLIC.HEALTH))
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.health.total
storm.health.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.raw$PROPDMGEXP
storm.raw$CROPDMGEXP
table(storm.raw$CROPDMGEXP)
table(storm.raw$PROPDMGEXP)
storm.econ <- storm.raw[storm.raw$PROPDMGEXP %in% c("k", "m", "b"), ]
head(storm.econ)
storm.econ$PROPDMGEXP
storm.raw$PROPDMGEXP
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.damages.total)
arrange(storm.damages.total,desc(DAMAGES.TOTAL))
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.damages.total)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
head(storm.damages.total)
head(storm.damages.total, n=10)
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total[2,2] <- NULL
storm.damages.total[2,2] <- NA
storm.damages
storm.damages.total
arrange(storm.damages.total,desc(DAMAGES.TOTAL))
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
storm.damages.total[1,2] <- storm.damages.total[1,2] + storm.damages.total[c(2,10),2]
storm.damages.total[1,2] <- storm.damages.total[1,2] + storm.damages.total[2,2], storm.damages.total[10,2]
storm.damages.total[1,2] <- storm.damages.total[1,2] + storm.damages.total[c(2,10),2]
storm.damages.total[1,2] <- storm.damages.total[1,2] + storm.damages.total[2,2] + storm.damages.total[10,2]
storm.damages.total
storm.damages.total$EVTYPE[4]
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
285+137+10
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
storm.health.total[1,2] + storm.health.total[2,2] + storm.damages.total[10,2]
storm.health.total[1,2]
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
source('~/Desktop/Coursera/RepData_PeerAssessment2/storm.R')
storm.damages.total
